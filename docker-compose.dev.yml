version: '3.8'

services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n-job-automation-dev
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_dev
      - DB_POSTGRESDB_USER=n8n_dev
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - N8N_BASIC_AUTH_ACTIVE=false  # Disabled for development
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      - GENERIC_TIMEZONE=${TIMEZONE:-America/New_York}
      - N8N_TEMPLATES_ENABLED=true
      - N8N_AI_ENABLED=true
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=debug
      - N8N_PERSONALIZATION_ENABLED=true
      - N8N_VERSION_NOTIFICATIONS_ENABLED=true
      - N8N_DIAGNOSTICS_ENABLED=false
      - EXECUTIONS_PROCESS=main
      - N8N_SECURE_COOKIE=false
    volumes:
      - n8n_dev_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
      - ./templates:/home/node/.n8n/templates
      - .:/workspace:cached
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-dev-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n_dev
      - POSTGRES_USER=n8n_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C.UTF-8 --lc-ctype=C.UTF-8
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-dev-db.sql:/docker-entrypoint-initdb.d/init-dev-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_dev -d n8n_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - n8n-dev-network

  redis:
    image: redis:7-alpine
    container_name: n8n-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - n8n-dev-network

  # Development tools
  adminer:
    image: adminer:latest
    container_name: n8n-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-dev-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: n8n-redis-commander-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - n8n-dev-network

volumes:
  n8n_dev_data:
    driver: local
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  n8n-dev-network:
    driver: bridge
    name: n8n-dev-network